buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'application'

group = 'com.spaceshift'
version = '1.8.0'

compileJava {
    options.encoding = "UTF-8"
    options.incremental = true
    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED"
    ])
    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED"
    ])
    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.graphics/com.sun.javafx.application=ALL-UNNAMED"
    ])
    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.controls/com.sun.javafx.scene.control.skin.resources=ALL-UNNAMED"
    ])
}

sourceCompatibility = 1.10
targetCompatibility = 1.10

compileTestJava {
    sourceCompatibility = 1.10
    targetCompatibility = 1.10
    options.compilerArgs += '-parameters'
}

mainClassName = "com.ss.editor.Main"

ext.applicationMainClass = "com.ss.editor.Main"
ext.applicationVendor = "javasabr@gmail.com"
ext.applicationTitle = "jMonkeyBuilder"
ext.jmeVersion = "3.2.1-SNAPSHOT"
ext.jmbExtVersion = "2.3.1"
ext.jme3_xbuf_version = '0.9.1'
ext.junitPlatformVersion = "1.0.0"
ext.junitJupiterVersion = "5.0.0"
ext.log4jVersion = '2.6.2'
ext.bintrayVersion = version

junitPlatform {
    filters {
        engines {
        }
        tags {
        }
    }
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://dl.bintray.com/javasabr/maven'
    }
}

publishing {
    publications {
        JmbArtifact(MavenPublication) {
            from components.java
            groupId 'com.spaceshift'
            artifactId 'jmonkeybuilder'
            version bintrayVersion
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getProperty('bintrayUser')
    key = System.getProperty('bintrayKey')
    publications = ['JmbArtifact']
    pkg {
        repo = 'maven'
        name = 'com.spaceshift.jmonkeybuilder'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/JavaSaBr/jmonkeybuilder'
        vcsUrl = 'https://github.com/JavaSaBr/jmonkeybuilder.git'
        issueTrackerUrl = 'https://github.com/JavaSaBr/jmonkeybuilder/issues'
        githubRepo = 'JavaSaBr/jmonkeybuilder'
        githubReleaseNotesFile = 'README.md'
        version {
            name = bintrayVersion
            desc = bintrayVersion
            released  = new Date()
        }
    }
}

javadoc {
    failOnError = false
}

dependencies {

    // base
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.9.0'
    compile 'org.controlsfx:controlsfx:9.0.0'
    compile 'com.spaceshift:rlib.fx:5.0.2'
    compile 'com.spaceshift:rlib.common:7.1.2'
    compile ('com.jme3:jfx:2.0.0') {
        exclude group: 'org.jmonkeyengine'
    }

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'

    // extend image support
    // https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-batik
    compile group: 'com.twelvemonkeys.imageio', name: 'imageio-batik', version: '3.3.2'
    // https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-hdr
    compile group: 'com.twelvemonkeys.imageio', name: 'imageio-hdr', version: '3.3.2'
    // https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-tiff
    compile group: 'com.twelvemonkeys.imageio', name: 'imageio-tiff', version: '3.3.2'

    // SVG support
    // https://mvnrepository.com/artifact/de.codecentric.centerdevice/javafxsvg
    compile group: 'de.codecentric.centerdevice', name: 'javafxsvg', version: '1.2.1'

    // JavaFX
    compile "org.openjfx:javafx-base:13:win"
    compile "org.openjfx:javafx-base:13:linux"
    compile "org.openjfx:javafx-base:13:mac"
    compile "org.openjfx:javafx-controls:13:win"
    compile "org.openjfx:javafx-controls:13:linux"
    compile "org.openjfx:javafx-controls:13:mac"
    compile "org.openjfx:javafx-graphics:13:win"
    compile "org.openjfx:javafx-graphics:13:linux"
    compile "org.openjfx:javafx-graphics:13:mac"
    compile "org.openjfx:javafx-fxml:13:win"
    compile "org.openjfx:javafx-fxml:13:linux"
    compile "org.openjfx:javafx-fxml:13:mac"
    compile "org.openjfx:javafx-swing:13:win"
    compile "org.openjfx:javafx-swing:13:linux"
    compile "org.openjfx:javafx-swing:13:mac"
    compile "org.openjfx:javafx-web:13:win"
    compile "org.openjfx:javafx-web:13:linux"
    compile "org.openjfx:javafx-web:13:mac"

    // jME
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-core:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-effects:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-bullet:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-bullet-native:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-lwjgl3:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-desktop:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-terrain:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-plugins:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-blender:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-jogg:$jmeVersion"
    compile ("com.github.JavaSaBr.jmonkeyengine:jme3-testdata:$jmeVersion") {
        exclude group: 'lessvoid'
    }

    // http support
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'

    // extensions
    compile ("com.spaceshift:jmonkeybuilder-extension:$jmbExtVersion") {
        exclude group: 'org.jmonkeyengine'
    }

    compile ("org.xbuf.jme3_xbuf:jme3_xbuf_loader:${jme3_xbuf_version}") {
        exclude group: 'org.jmonkeyengine'
    }

    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.13'

    // TESTS
    testRuntime "com.github.JavaSaBr.jmonkeyengine:jme3-lwjgl3:$jmeVersion"
    testCompile ("com.spaceshift:jmonkeybuilder-extension:$jmbExtVersion") {
        exclude group: 'org.jmonkeyengine'
        exclude group: 'com.github.JavaSaB.jmonkeyengine'
    }

    testCompile "org.junit.platform:junit-platform-commons:$junitPlatformVersion"
    testRuntime "org.junit.platform:junit-platform-engine:$junitPlatformVersion"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"

    testRuntime "org.apache.logging.log4j:log4j-core:$log4jVersion"
    testRuntime "org.apache.logging.log4j:log4j-jul:$log4jVersion"

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testCompile "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
}

ant.importBuild('build-native.xml')
ant.basedir = new File(buildDir.getParentFile(), "native-build")
ant.properties.javaSourceVersion = sourceCompatibility
ant.properties.javaTargetVersion = targetCompatibility
ant.properties.applicationJarName = name + ".jar"
ant.properties.applicationMainClass = ext.applicationMainClass
ant.properties.applicationVendor = ext.applicationVendor
ant.properties.applicationTitle = ext.applicationTitle
ant.properties.applicationVersion = version

task prepareDependencies(type: Copy) {

    doFirst {
        println("delete " + "$buildDir/dependencies")
        GFileUtils.deleteDirectory(new File("$buildDir/dependencies"))
    }

    into "$buildDir/dependencies"
    from configurations.runtime
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}